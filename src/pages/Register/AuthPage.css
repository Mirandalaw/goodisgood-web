import { useState } from 'react';
import { useNavigate } from 'react-router-dom';
import axios from 'axios';
import './AuthPage.css';

export default function AuthPage() {
const [isSignUp, setIsSignUp] = useState(false);
    const navigate = useNavigate();

const [loginInfo, setLoginInfo] = useState({ email: '', password: '' });
const [registerInfo, setRegisterInfo] = useState({
    name: '',
    email: '',
    password: '',
    phone: '',
});

    const handleLogin = async (e: React.FormEvent) => {
e.preventDefault();
try {
    const res = await axios.post('http://localhost:3000/api/auth/login', loginInfo, {
    withCredentials: true,
    headers: { 'Content-Type': 'application/json' },
});
localStorage.setItem('accessToken', res.data.data.accessToken);
navigate('/me');
} catch (err) {
alert('로그인 실패');
}
};

    const handleRegister = async (e: React.FormEvent) => {
e.preventDefault();
try {
    await axios.post('http://localhost:3000/api/auth/register', registerInfo, {
    withCredentials: true,
    headers: { 'Content-Type': 'application/json' },
});
alert('회원가입 성공! 로그인해주세요.');
setIsSignUp(false);
} catch (err: any) {
alert('회원가입 실패: ' + (err.response?.data?.message || '서버 오류'));
}
};

    return (
    <div className="auth-wrapper">
    <div className={`auth-container ${isSignUp ? 'right-panel-active' : ''}`}>
<div className="form-container sign-up-container">
<form onSubmit={handleRegister}>
<h1>Create Account</h1>
<input type="text" placeholder="Name" required value={registerInfo.name} onChange={(e) => setRegisterInfo({ ...registerInfo, name: e.target.value })} />
<input type="email" placeholder="Email" required value={registerInfo.email} onChange={(e) => setRegisterInfo({ ...registerInfo, email: e.target.value })} />
<input type="password" placeholder="Password" required value={registerInfo.password} onChange={(e) => setRegisterInfo({ ...registerInfo, password: e.target.value })} />
<input type="text" placeholder="Phone (010-XXXX-XXXX)" required value={registerInfo.phone} onChange={(e) => setRegisterInfo({ ...registerInfo, phone: e.target.value })} />
<button className="form-btn">Sign Up</button>
</form>
</div>

<div className="form-container sign-in-container">
<form onSubmit={handleLogin}>
<h1>Sign In</h1>
<input type="email" placeholder="Email" required value={loginInfo.email} onChange={(e) => setLoginInfo({ ...loginInfo, email: e.target.value })} />
<input type="password" placeholder="Password" required value={loginInfo.password} onChange={(e) => setLoginInfo({ ...loginInfo, password: e.target.value })} />
<button className="form-btn">Sign In</button>
<div className="social-login">
<button type="button"><img src="/google.svg" alt="Google" /> Sign in with Google</button>
<button type="button"><img src="/kakao.svg" alt="Kakao" /> Sign in with Kakao</button>
<button type="button"><img src="/naver.svg" alt="Naver" /> Sign in with Naver</button>
</div>
</form>
</div>

<div className="overlay-container">
<div className="overlay">
<div className="overlay-panel overlay-left">
<h1>Welcome Back!</h1>
<p>Login to continue your journey with us</p>
<button className="ghost" onClick={() => setIsSignUp(false)}>Sign In</button>
</div>
<div className="overlay-panel overlay-right">
<h1>Hello, Friend!</h1>
<p>Enter your personal details and start your journey</p>
<button className="ghost" onClick={() => setIsSignUp(true)}>Sign Up</button>
</div>
</div>
</div>
</div>
</div>
);
}

/* AuthPage.css */
.auth-wrapper {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100vh;
    background: #f5f6fa;
}

.auth-container {
    background: #fff;
    border-radius: 10px;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
    overflow: hidden;
    width: 800px;
    max-width: 100%;
    display: flex;
    position: relative;
}

.form-container {
    flex: 1;
    padding: 50px;
    display: flex;
    flex-direction: column;
    justify-content: center;
}

input {
    background: #f0f0f0;
    border: none;
    margin: 8px 0;
    padding: 12px;
    font-size: 16px;
    border-radius: 8px;
    width: 100%;
}

.form-btn {
    background-color: #6c5ce7;
    color: #fff;
    border: none;
    padding: 14px;
    border-radius: 8px;
    margin-top: 20px;
    font-size: 16px;
    cursor: pointer;
    width: 100%;
}

.form-btn:hover {
    background-color: #5a4cd1;
}

.social-login {
    display: flex;
    flex-direction: column;
    gap: 10px;
    margin-top: 20px;
}

.social-login button {
    background: #fff;
    border: 1px solid #ddd;
    padding: 10px;
    border-radius: 8px;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 8px;
    cursor: pointer;
    font-size: 14px;
}

.overlay-container {
    position: absolute;
    top: 0;
    height: 100%;
    width: 100%;
    display: flex;
}

.overlay {
    background: linear-gradient(to right, #6c5ce7, #a29bfe);
    color: #fff;
    position: relative;
    left: 50%;
    width: 50%;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    flex-direction: column;
    transition: transform 0.6s ease-in-out;
}

.overlay-panel {
    text-align: center;
}

.ghost {
    background-color: transparent;
    border: 1px solid #fff;
    color: #fff;
    padding: 12px;
    border-radius: 8px;
    margin-top: 20px;
    cursor: pointer;
}

.right-panel-active .overlay-container {
    transform: translateX(-100%);
}

.right-panel-active .overlay {
    transform: translateX(-100%);
}

.right-panel-active .sign-in-container {
    transform: translateX(100%);
}

.right-panel-active .sign-up-container {
    transform: translateX(100%);
    opacity: 1;
    z-index: 5;
}